// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WineDocumentation.Infrastructure.EF;

namespace WineDocumentation.Infrastructure.Migrations
{
    [DbContext(typeof(WineDocumentationContex))]
    partial class WineDocumentationContexModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("WineDocumentation.Core.Domain.Score", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<string>("Comment");

                    b.Property<uint>("ScoreValue");

                    b.Property<Guid?>("WineId");

                    b.HasKey("Id");

                    b.HasIndex("WineId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("WineDocumentation.Core.Domain.Species", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<string>("Sepciesname");

                    b.HasKey("Id");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("WineDocumentation.Core.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Salt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WineDocumentation.Core.Domain.Wine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<Guid>("SpeciesId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Winename");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Wine","public");
                });

            modelBuilder.Entity("WineDocumentation.Core.Domain.Score", b =>
                {
                    b.HasOne("WineDocumentation.Core.Domain.Wine")
                        .WithMany("Scores")
                        .HasForeignKey("WineId");
                });

            modelBuilder.Entity("WineDocumentation.Core.Domain.Wine", b =>
                {
                    b.HasOne("WineDocumentation.Core.Domain.Species", "Species")
                        .WithMany()
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
